


Course Name : SB101							           Student Code: fw18_0680

Online Hardware and software support system design by Vaibhav Ghawale

Problem Description:
The system will be available on an online platform for 24x7 access to the employees, the engineers, the Head of the Department, and the administration. 
It Helps keep your IT staff productive with fast, accurate, remote technical support for your System environment. It provides defect support for a broad 
range of Products running on System hardware.
Factors to consider include the cost of downtime, skills, retention, overheads, customer satisfaction, and many others.

Employees of the organization use based hardware for their daily work. If for some reason, this hardware goes down it is very
important to take care of this hardware and in case of fault, that should be repaired on a priority basis. To maintain and support this hardware there 
exists a separate department, generally known as “SYSTEM ENGINEERS DEPARTMENT”. For any problem, the concerned
employee must report to this department. Engineers from this department take care of the problem.

Users:
	1. HOD
	2. Engineer
	3. Employee

Roles for the HOD:
•	Login into the system 
•	Register a new Engineer with a username(email) and password and the category (Hardware/software)
•	Can see a List of all the Registered Engineers.
•	Can Delete any Engineers from the system
•	Can able to see all the raised problems.
•	Can assign any problem to any Engineer.
Roles of Engineer:
•	Each engineer has an account by which they can log in. (credentials given by the HOD)
•	Engineer can view the problem assigned to him by HOD.
•	Engineer can update the status of the problem addressed by him. i. e. whether it is solved or anything.
•	They can see a list of all the problems attended by him/her.
•	Engineer can change his password.

Roles of Employee:

•	Employee can register himself with his username and password.
•	Each employee has their account in the system with which they can log in
•	Employee can register any complaint (hardware/software) through the system. After registering the complaint a complaint id is generated by the system.
•	Employees can see the status of their problem by using complaint id. Status means they can check who (engineer) is assigned to his problem.
•	They can see all complaints history raised by him/her.
•	Employee can change his/her password.


======================================================================================================================================================

Step 2: Creating a required Database.
	
***Create a database sb101_project;
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| assignment1        |
| evaluation         |
| information_schema |
| mysql              |
| org                |
| performance_schema |
| sb101_project      |
| sys                |
+--------------------+
8 rows in set (0.03 sec)



============================================================================================================================================================

Step2: Create a All reruired tables:



	1. create HOD table
	(
	username varchar(15),
	password varchar(15)
	);
	


mysql> desc hod;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| username | varchar(15) | YES  |     | NULL    |       |
| password | varchar(15) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------------------------------------------------------------------

	2.create table engineer
	  (
	  EngId primary key auto increment,
	  EngName varchar(15),
	  EngUserName varchar(15) unique,
	  EngPasswor varchar(15),
	  EngCategory varchar(20)
	  );

	
	mysql> desc engineer;
+-------------+-------------+------+-----+---------+----------------+
| Field       | Type        | Null | Key | Default | Extra          |
+-------------+-------------+------+-----+---------+----------------+
| EngId       | int         | NO   | PRI | NULL    | auto_increment |
| EngName     | varchar(15) | YES  |     | NULL    |                |
| EngUserName | varchar(15) | YES  | UNI | NULL    |                |
| EngPassword | varchar(15) | YES  |     | NULL    |                |
| EngCategory | varchar(20) | YES  |     | NULL    |                |
+-------------+-------------+------+-----+---------+----------------+
5 rows in set (0.02 sec)

-----------------------------------------------------------------------------------------------------------------------------------------------------------

	3.create table Problems
	(
	pid int primary key auto_increment,
	pname varchar(20),
	pcategory varchar(15)
	);

mysql> desc problems;
+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| pid       | int         | NO   | PRI | NULL    | auto_increment |
| pname     | varchar(20) | YES  |     | NULL    |                |
| pcategory | varchar(15) | YES  |     | NULL    |                |
| status    | varchar(15) | YES  |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
4 rows in set (0.00 sec)

------------------------------------------------------------------------------------------------------------------------------------------------------------

	  **Relation between enployee and engineer and problems;

          4.create table employee_engineer
   	  (
  	   rpid int,
   	  reid int,
   	  FOREIGN KEY (rpid) REFERENCES problems(pid),
  	   FOREIGN KEY (reid) REFERENCES engineer (Engid)
   	  );

mysql> desc employee_engineer;
+-------+------+------+-----+---------+-------+
| Field | Type | Null | Key | Default | Extra |
+-------+------+------+-----+---------+-------+
| rpid  | int  | YES  | MUL | NULL    |       |
| reid  | int  | YES  | MUL | NULL    |       |
+-------+------+------+-----+---------+-------+
2 rows in set (0.00 sec)


============================================================================================================================================================
Step 2: Create a Separated Unitily package fro making a database connection...

	1. DButil
	
	Class.forName("com.mysql.cj.jdbc.Driver");
		
        String url="jdbc:mysql://localhost:3306/sb101_project";

============================================================================================================================================================

Step 3: Create a Bean Classes

	1. Hod.
	2. Engineer.
	3. Employee.
	4. EmployeePro.

============================================================================================================================================================

Step 3: Create a DAO Interfaces and its Implementation class.

	1. HodDao (I).
	   HodDaoImpl (C).

	2. EngineerDao (I).
	   EngineerDaoImpl (C).

	3. EmployeeDao (I).
	   EmployeeDaoImpl (C).

        4. ProblemsDao (I).
	   ProblemsDaoImpl (C).
	

============================================================================================================================================================

Step 4: Create a Separated Exception classes.

	1. HodException (C).
	

	2. EngineerException (C).
	 

	3. EmployeeException (C).
	  

        4. ProblemsException (C).
	


============================================================================================================================================================

Step 5: Create a Separated use cases classes.

	I. Create a Login for HOD...
	   1. username : admin.
	   2. password : admin123.
	
	II.Creating a functionality for Apooint a new engineer in system.
	
	






























